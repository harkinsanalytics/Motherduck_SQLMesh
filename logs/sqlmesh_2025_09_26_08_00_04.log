2025-09-26 08:00:06,584 - MainThread - sqlmesh.core.config.connection - INFO - Creating new DuckDB adapter for data files: {'md:champions_league_data'} (connection.py:491)
2025-09-26 08:00:06,660 - MainThread - sqlmesh.core.console - WARNING - The motherduck engine is not recommended for storing SQLMesh state in production deployments. Please see https://sqlmesh.readthedocs.io/en/stable/guides/configuration/#state-connection for a list of recommended engines and more information. (console.py:2335)
2025-09-26 08:00:08,830 - MainThread - sqlmesh.core.config.connection - INFO - Using existing DuckDB adapter due to overlapping data file: md:champions_league_data (connection.py:481)
2025-09-26 08:00:09,048 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Compacting 23 intervals for 9 snapshots (interval.py:129)
2025-09-26 08:00:09,048 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."facts"."fct_ucl_league_standings": 1114700219> (interval.py:214)
2025-09-26 08:00:09,050 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_matches": 1591652863> (interval.py:214)
2025-09-26 08:00:09,050 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_teams": 1886540669> (interval.py:214)
2025-09-26 08:00:09,050 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."snapshots"."ucl_matches_snapshot": 968411897> (interval.py:214)
2025-09-26 08:00:09,050 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot None (interval.py:214)
2025-09-26 08:00:09,051 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_latlong": 385811266> (interval.py:214)
2025-09-26 08:00:09,051 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_matches": 2489271088> (interval.py:214)
2025-09-26 08:00:09,051 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_squads": 3149699930> (interval.py:214)
2025-09-26 08:00:09,051 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_teams": 3228966558> (interval.py:214)
2025-09-26 08:00:10,148 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema champions_league_data.sqlmesh__staging (evaluator.py:1477)
2025-09-26 08:00:10,150 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,151 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,154 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__staging') AND table_name IN ('staging__stg_ucl_teams__1831555003', 'staging__stg_ucl_matches__2043582137', 'staging__stg_ucl_squads__845206470', 'staging__stg_ucl_latlong__3331770713') (base.py:2498)
2025-09-26 08:00:10,172 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema champions_league_data.sqlmesh__intermediate (evaluator.py:1477)
2025-09-26 08:00:10,173 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,174 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,176 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__intermediate') AND table_name IN ('intermediate__int_ucl_teams__1292453979', 'intermediate__int_ucl_matches__2049823413') (base.py:2498)
2025-09-26 08:00:10,180 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema champions_league_data.sqlmesh__facts (evaluator.py:1477)
2025-09-26 08:00:10,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,181 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,183 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__facts') AND table_name IN ('facts__fct_ucl_league_standings__3223561462') (base.py:2498)
2025-09-26 08:00:10,187 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Listing data objects in schema champions_league_data.sqlmesh__snapshots (evaluator.py:1477)
2025-09-26 08:00:10,188 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,188 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,190 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__snapshots') AND table_name IN ('snapshots__ucl_matches_snapshot__2584317657') (base.py:2498)
2025-09-26 08:00:10,362 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_latlong": 385811266> (evaluator.py:700)
2025-09-26 08:00:10,364 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_latlong": 385811266> (evaluator.py:909)
2025-09-26 08:00:10,375 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__staging.staging__stg_ucl_latlong__3331770713' (evaluator.py:939)
2025-09-26 08:00:10,376 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_latlong__3331770713" (base.py:2498)
2025-09-26 08:00:10,380 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,381 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,383 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__staging') AND table_name IN ('staging__stg_ucl_latlong__3331770713') (base.py:2498)
2025-09-26 08:00:10,390 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:10,392 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:10,395 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_latlong__3331770713" AS SELECT CAST("team_id" AS BIGINT) AS "team_id", CAST("latitude" AS DOUBLE) AS "latitude", CAST("longitude" AS DOUBLE) AS "longitude" FROM (SELECT "team_id" AS "team_id", (CASE WHEN LOWER(TRIM("latitude")) LIKE '%s%' THEN -1 ELSE 1 END) * CAST(REGEXP_REPLACE(TRIM("latitude"), '[^0-9.+-]', '', 'g') AS DOUBLE) AS "latitude", (CASE WHEN LOWER(TRIM("longitude")) LIKE '%w%' THEN -1 ELSE 1 END) * CAST(REGEXP_REPLACE(TRIM("longitude"), '[^0-9.+-]', '', 'g') AS DOUBLE) AS "longitude" FROM "champions_league_data"."main"."ucl_teams_city_latlong" AS "ucl_teams_city_latlong") AS "_subquery" (base.py:2498)
2025-09-26 08:00:10,764 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: COMMENT ON COLUMN "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_latlong__3331770713"."team_id" IS 'Latitude: negative if ''S''' (base.py:2498)
2025-09-26 08:00:10,871 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_latlong": 385811266> (facade.py:623)
2025-09-26 08:00:10,872 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_latlong": 385811266> (interval.py:214)
2025-09-26 08:00:11,276 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_matches": 2489271088> (evaluator.py:700)
2025-09-26 08:00:11,277 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_matches": 2489271088> (evaluator.py:909)
2025-09-26 08:00:11,283 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__staging.staging__stg_ucl_matches__2043582137' (evaluator.py:939)
2025-09-26 08:00:11,284 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_matches__2043582137" (base.py:2498)
2025-09-26 08:00:11,288 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,289 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,291 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__staging') AND table_name IN ('staging__stg_ucl_matches__2043582137') (base.py:2498)
2025-09-26 08:00:11,299 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,300 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:11,306 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_matches__2043582137" AS WITH "t1" AS (SELECT "id" AS "match_id", CAST(CAST("utcdate" AS TIMESTAMPTZ) AT TIME ZONE 'America/New_York' AS TIMESTAMP) AS "match_datetime_est", "status" AS "match_status", "matchday", "stage", "group", "lastupdated" AS "last_updated", "referees", "area_name", "competition_id", "competition_name", "competition_code", "season_id", "season_startdate" AS "season_start_date", "season_enddate" AS "season_end_date", "season_currentmatchday" AS "season_current_matchday", "hometeam_id" AS "hometeam_id", "hometeam_name" AS "hometeam_name", "hometeam_shortname" AS "hometeam_shortname", "hometeam_tla" AS "hometeam_tla", "awayteam_id" AS "awayteam_id", "awayteam_name" AS "awayteam_name", "awayteam_shortname" AS "awayteam_shortname", "awayteam_tla" AS "awayteam_tla", "score_winner", "score_duration", "score_fulltime_home" AS "score_fulltime_home", "score_fulltime_away" AS "score_fulltime_away", "score_halftime_home" AS "score_halftime_home", "score_halftime_away" AS "score_halftime_away", "odds_msg", "last_modified" FROM "champions_league_data"."main"."champions_league_matches" AS "champions_league_matches") SELECT CAST("match_id" AS BIGINT) AS "match_id", CAST("match_datetime_est" AS TIMESTAMP) AS "match_datetime_est", CAST("match_status" AS TEXT) AS "match_status", CAST("matchday" AS DOUBLE) AS "matchday", CAST("stage" AS TEXT) AS "stage", CAST("group" AS INT) AS "group", CAST("last_updated" AS TEXT) AS "last_updated", CAST("referees" AS STRUCT("id" INT, "name" TEXT, "type" TEXT, "nationality" TEXT)[]) AS "referees", CAST("area_name" AS TEXT) AS "area_name", CAST("competition_id" AS BIGINT) AS "competition_id", CAST("competition_name" AS TEXT) AS "competition_name", CAST("competition_code" AS TEXT) AS "competition_code", CAST("season_id" AS BIGINT) AS "season_id", CAST("season_start_date" AS TEXT) AS "season_start_date", CAST("season_end_date" AS TEXT) AS "season_end_date", CAST("season_current_matchday" AS BIGINT) AS "season_current_matchday", CAST("hometeam_id" AS DOUBLE) AS "hometeam_id", CAST("hometeam_name" AS TEXT) AS "hometeam_name", CAST("hometeam_shortname" AS TEXT) AS "hometeam_shortname", CAST("hometeam_tla" AS TEXT) AS "hometeam_tla", CAST("awayteam_id" AS DOUBLE) AS "awayteam_id", CAST("awayteam_name" AS TEXT) AS "awayteam_name", CAST("awayteam_shortname" AS TEXT) AS "awayteam_shortname", CAST("awayteam_tla" AS TEXT) AS "awayteam_tla", CAST("score_winner" AS TEXT) AS "score_winner", CAST("score_duration" AS TEXT) AS "score_duration", CAST("score_fulltime_home" AS DOUBLE) AS "score_fulltime_home", CAST("score_fulltime_away" AS DOUBLE) AS "score_fulltime_away", CAST("score_halftime_home" AS DOUBLE) AS "score_halftime_home", CAST("score_halftime_away" AS DOUBLE) AS "score_halftime_away", CAST("odds_msg" AS TEXT) AS "odds_msg", CAST("last_modified" AS TIMESTAMP_NS) AS "last_modified" FROM (SELECT * FROM "t1" AS "t1") AS "_subquery" (base.py:2498)
2025-09-26 08:00:11,443 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_matches": 2489271088> (facade.py:623)
2025-09-26 08:00:11,443 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_matches": 2489271088> (interval.py:214)
2025-09-26 08:00:11,818 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_squads": 3149699930> (evaluator.py:700)
2025-09-26 08:00:11,818 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_squads": 3149699930> (evaluator.py:909)
2025-09-26 08:00:11,822 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__staging.staging__stg_ucl_squads__845206470' (evaluator.py:939)
2025-09-26 08:00:11,822 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_squads__845206470" (base.py:2498)
2025-09-26 08:00:11,825 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,826 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,827 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__staging') AND table_name IN ('staging__stg_ucl_squads__845206470') (base.py:2498)
2025-09-26 08:00:11,833 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:11,834 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:11,836 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_squads__845206470" AS SELECT CAST("team_id" AS BIGINT) AS "team_id", CAST("player_id" AS BIGINT) AS "player_id", CAST("player_name" AS TEXT) AS "player_name", CAST("player_position" AS TEXT) AS "player_position", CAST("player_nationality" AS TEXT) AS "player_nationality", CAST("player_shirt_number" AS INT) AS "player_shirt_number" FROM (SELECT "team_id" AS "team_id", "player_id" AS "player_id", "player_name" AS "player_name", "player_position" AS "player_position", "player_nationality" AS "player_nationality", "player_shirtnumber" AS "player_shirt_number" FROM "champions_league_data"."main"."champions_league_team_squad" AS "champions_league_team_squad") AS "_subquery" (base.py:2498)
2025-09-26 08:00:11,972 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_squads": 3149699930> (facade.py:623)
2025-09-26 08:00:11,972 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_squads": 3149699930> (interval.py:214)
2025-09-26 08:00:12,336 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_teams": 3228966558> (evaluator.py:700)
2025-09-26 08:00:12,337 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_teams": 3228966558> (evaluator.py:909)
2025-09-26 08:00:12,348 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__staging.staging__stg_ucl_teams__1831555003' (evaluator.py:939)
2025-09-26 08:00:12,349 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_teams__1831555003" (base.py:2498)
2025-09-26 08:00:12,354 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,355 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,358 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__staging') AND table_name IN ('staging__stg_ucl_teams__1831555003') (base.py:2498)
2025-09-26 08:00:12,366 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,368 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:12,372 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_teams__1831555003" AS SELECT CAST("team_id" AS BIGINT) AS "team_id", CAST("team_name" AS TEXT) AS "team_name", CAST("team_short_name" AS TEXT) AS "team_short_name", CAST("team_tla" AS TEXT) AS "team_tla", CAST("team_address" AS TEXT) AS "team_address", CAST("team_venue" AS TEXT) AS "team_venue", CAST("lastupdated" AS TEXT) AS "lastupdated", CAST("area_id" AS BIGINT) AS "area_id", CAST("area_name" AS TEXT) AS "area_name", CAST("coach_id" AS BIGINT) AS "coach_id", CAST("coach_first_name" AS TEXT) AS "coach_first_name", CAST("coach_last_name" AS TEXT) AS "coach_last_name", CAST("coach_name" AS TEXT) AS "coach_name", CAST("coach_nationality" AS TEXT) AS "coach_nationality", CAST("coach_contract_start" AS TEXT) AS "coach_contract_start", CAST("coach_contract_until" AS TEXT) AS "coach_contract_until", CAST("last_modified" AS TIMESTAMP_NS) AS "last_modified" FROM (SELECT "team_id" AS "team_id", "team_name" AS "team_name", "team_shortname" AS "team_short_name", "team_tla" AS "team_tla", "address" AS "team_address", "venue" AS "team_venue", "lastupdated" AS "lastupdated", "area_id" AS "area_id", "area_name" AS "area_name", "coach_id" AS "coach_id", "coach_firstname" AS "coach_first_name", "coach_lastname" AS "coach_last_name", "coach_name" AS "coach_name", "coach_nationality" AS "coach_nationality", "coach_contract_start" AS "coach_contract_start", "coach_contract_until" AS "coach_contract_until", "last_modified" AS "last_modified" FROM "champions_league_data"."main"."champions_league_teams" AS "champions_league_teams") AS "_subquery" (base.py:2498)
2025-09-26 08:00:12,487 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_teams": 3228966558> (facade.py:623)
2025-09-26 08:00:12,488 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."staging"."stg_ucl_teams": 3228966558> (interval.py:214)
2025-09-26 08:00:12,837 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_teams": 1886540669> (evaluator.py:700)
2025-09-26 08:00:12,838 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_teams": 1886540669> (evaluator.py:909)
2025-09-26 08:00:12,847 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__intermediate.intermediate__int_ucl_teams__1292453979' (evaluator.py:939)
2025-09-26 08:00:12,847 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_teams__1292453979" (base.py:2498)
2025-09-26 08:00:12,852 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,852 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,855 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__intermediate') AND table_name IN ('intermediate__int_ucl_teams__1292453979') (base.py:2498)
2025-09-26 08:00:12,863 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:12,864 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:12,869 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_teams__1292453979" AS WITH "t1" AS (SELECT "t"."area_name", "t"."team_id", "t"."team_name", "t"."team_short_name", "t"."team_tla", "t"."team_address", "t"."team_venue", "t"."coach_id", "t"."coach_first_name", "t"."coach_last_name", "t"."coach_name", "t"."coach_nationality", "t"."coach_contract_start", "t"."coach_contract_until", "t"."lastupdated", "l"."latitude", "l"."longitude", "r"."rank" AS "european_rank", RANK() OVER (ORDER BY "r"."rank") AS "ucl_rank" FROM "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_teams__1831555003" AS "t" JOIN "champions_league_data"."main"."ucl_teams_city_latlong" AS "l" ON "t"."team_id" = "l"."team_id" JOIN "champions_league_data"."main"."ucl_european_rankings" AS "r" ON "t"."team_id" = "r"."team_id") SELECT CAST("area_name" AS TEXT) AS "area_name", CAST("team_id" AS BIGINT) AS "team_id", CAST("team_name" AS TEXT) AS "team_name", CAST("team_short_name" AS TEXT) AS "team_short_name", CAST("team_tla" AS TEXT) AS "team_tla", CAST("team_address" AS TEXT) AS "team_address", CAST("team_venue" AS TEXT) AS "team_venue", CAST("coach_id" AS BIGINT) AS "coach_id", CAST("coach_first_name" AS TEXT) AS "coach_first_name", CAST("coach_last_name" AS TEXT) AS "coach_last_name", CAST("coach_name" AS TEXT) AS "coach_name", CAST("coach_nationality" AS TEXT) AS "coach_nationality", CAST("coach_contract_start" AS TEXT) AS "coach_contract_start", CAST("coach_contract_until" AS TEXT) AS "coach_contract_until", CAST("lastupdated" AS TEXT) AS "lastupdated", CAST("Latitude" AS TEXT) AS "Latitude", CAST("Longitude" AS TEXT) AS "Longitude", CAST("european_rank" AS BIGINT) AS "european_rank", CAST("ucl_rank" AS BIGINT) AS "ucl_rank" FROM (SELECT * FROM "t1" AS "t1") AS "_subquery" (base.py:2498)
2025-09-26 08:00:13,063 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_teams": 1886540669> (facade.py:623)
2025-09-26 08:00:13,063 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_teams": 1886540669> (interval.py:214)
2025-09-26 08:00:13,430 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_matches": 1591652863> (evaluator.py:700)
2025-09-26 08:00:13,431 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_matches": 1591652863> (evaluator.py:909)
2025-09-26 08:00:13,450 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__intermediate.intermediate__int_ucl_matches__2049823413' (evaluator.py:939)
2025-09-26 08:00:13,451 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_matches__2049823413" (base.py:2498)
2025-09-26 08:00:13,458 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:13,459 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:13,460 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__intermediate') AND table_name IN ('intermediate__int_ucl_matches__2049823413') (base.py:2498)
2025-09-26 08:00:13,472 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:13,474 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:13,484 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_matches__2049823413" AS WITH "t1" AS (SELECT "m"."competition_id", "m"."competition_name", "m"."competition_code", "m"."season_id", "m"."season_start_date", "m"."season_end_date", "m"."season_current_matchday", "m"."match_id", "m"."match_datetime_est", CAST("m"."match_datetime_est" AS DATE) AS "match_date", "m"."match_status", "m"."matchday", "m"."stage", "m"."group", "m"."hometeam_id", "m"."hometeam_name", "m"."hometeam_shortname", "m"."hometeam_tla", "m"."awayteam_id", "m"."awayteam_name", "m"."awayteam_shortname", "m"."awayteam_tla", "m"."score_winner", "m"."score_duration", "m"."score_fulltime_home", "m"."score_fulltime_away", "m"."score_halftime_home", "m"."score_halftime_away", "m"."referees", "l"."latitude" AS "hometeam_latitude", "l"."longitude" AS "hometeam_longitude", "ll"."latitude" AS "awayteam_latitude", "ll"."longitude" AS "awayteam_longitude", "t"."european_rank" AS "hometeam_european_rank", "tt"."european_rank" AS "awayteam_european_rank", "t"."ucl_rank" AS "hometeam_ucl_rank", "tt"."ucl_rank" AS "awayteam_ucl_rank" FROM "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_matches__2043582137" AS "m" LEFT JOIN "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_teams__1292453979" AS "t" ON "m"."hometeam_id" = "t"."team_id" LEFT JOIN "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_teams__1292453979" AS "tt" ON "m"."awayteam_id" = "tt"."team_id" LEFT JOIN "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_latlong__3331770713" AS "l" ON "m"."hometeam_id" = "l"."team_id" LEFT JOIN "champions_league_data"."sqlmesh__staging"."staging__stg_ucl_latlong__3331770713" AS "ll" ON "m"."awayteam_id" = "ll"."team_id"), "travel_distance" AS (SELECT *, ROUND(3959 * 2 * ASIN(SQRT(POWER(SIN(RADIANS("awayteam_latitude" - "hometeam_latitude") / 2), 2) + COS(RADIANS("hometeam_latitude")) * COS(RADIANS("awayteam_latitude")) * POWER(SIN(RADIANS("awayteam_longitude" - "hometeam_longitude") / 2), 2))), 2) AS "distance_in_miles", MAX("match_date") OVER (PARTITION BY "matchday", "stage" ORDER BY "match_date" DESC) AS "last_match" FROM "t1" AS "t1") SELECT CAST("competition_id" AS BIGINT) AS "competition_id", CAST("competition_name" AS TEXT) AS "competition_name", CAST("competition_code" AS TEXT) AS "competition_code", CAST("season_id" AS BIGINT) AS "season_id", CAST("season_start_date" AS TEXT) AS "season_start_date", CAST("season_end_date" AS TEXT) AS "season_end_date", CAST("season_current_matchday" AS BIGINT) AS "season_current_matchday", CAST("match_id" AS BIGINT) AS "match_id", CAST("match_datetime_est" AS TIMESTAMP) AS "match_datetime_est", CAST("match_date" AS DATE) AS "match_date", CAST("match_status" AS TEXT) AS "match_status", CAST("matchday" AS DOUBLE) AS "matchday", CAST("stage" AS TEXT) AS "stage", CAST("group" AS INT) AS "group", CAST("hometeam_id" AS DOUBLE) AS "hometeam_id", CAST("hometeam_name" AS TEXT) AS "hometeam_name", CAST("hometeam_shortname" AS TEXT) AS "hometeam_shortname", CAST("hometeam_tla" AS TEXT) AS "hometeam_tla", CAST("awayteam_id" AS DOUBLE) AS "awayteam_id", CAST("awayteam_name" AS TEXT) AS "awayteam_name", CAST("awayteam_shortname" AS TEXT) AS "awayteam_shortname", CAST("awayteam_tla" AS TEXT) AS "awayteam_tla", CAST("score_winner" AS TEXT) AS "score_winner", CAST("score_duration" AS TEXT) AS "score_duration", CAST("score_fulltime_home" AS DOUBLE) AS "score_fulltime_home", CAST("score_fulltime_away" AS DOUBLE) AS "score_fulltime_away", CAST("score_halftime_home" AS DOUBLE) AS "score_halftime_home", CAST("score_halftime_away" AS DOUBLE) AS "score_halftime_away", CAST("referees" AS STRUCT("id" INT, "name" TEXT, "type" TEXT, "nationality" TEXT)[]) AS "referees", CAST("hometeam_latitude" AS DOUBLE) AS "hometeam_latitude", CAST("hometeam_longitude" AS DOUBLE) AS "hometeam_longitude", CAST("awayteam_latitude" AS DOUBLE) AS "awayteam_latitude", CAST("awayteam_longitude" AS DOUBLE) AS "awayteam_longitude", CAST("hometeam_european_rank" AS BIGINT) AS "hometeam_european_rank", CAST("awayteam_european_rank" AS BIGINT) AS "awayteam_european_rank", CAST("hometeam_ucl_rank" AS BIGINT) AS "hometeam_ucl_rank", CAST("awayteam_ucl_rank" AS BIGINT) AS "awayteam_ucl_rank", CAST("distance_in_miles" AS DOUBLE) AS "distance_in_miles", CAST("week_ending_date" AS DATE) AS "week_ending_date" FROM (SELECT "td".* EXCLUDE ("last_match"), "last_match" AS "week_ending_date" FROM "travel_distance" AS "td") AS "_subquery" (base.py:2498)
2025-09-26 08:00:13,647 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_matches": 1591652863> (facade.py:623)
2025-09-26 08:00:13,648 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."intermediate"."int_ucl_matches": 1591652863> (interval.py:214)
2025-09-26 08:00:14,015 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."facts"."fct_ucl_league_standings": 1114700219> (evaluator.py:700)
2025-09-26 08:00:14,016 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."facts"."fct_ucl_league_standings": 1114700219> (evaluator.py:909)
2025-09-26 08:00:14,039 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__facts.facts__fct_ucl_league_standings__3223561462' (evaluator.py:939)
2025-09-26 08:00:14,040 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__facts"."facts__fct_ucl_league_standings__3223561462" (base.py:2498)
2025-09-26 08:00:14,042 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:14,043 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:14,044 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT table_name AS name, table_schema AS schema, CASE table_type WHEN 'BASE TABLE' THEN 'table' WHEN 'VIEW' THEN 'view' WHEN 'LOCAL TEMPORARY' THEN 'table' END AS type FROM system.information_schema.tables WHERE (table_catalog = 'champions_league_data' AND table_schema = 'sqlmesh__facts') AND table_name IN ('facts__fct_ucl_league_standings__3223561462') (base.py:2498)
2025-09-26 08:00:14,052 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:14,053 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:14,060 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE OR REPLACE TABLE "champions_league_data"."sqlmesh__facts"."facts__fct_ucl_league_standings__3223561462" AS WITH "hometeam" AS (SELECT "match_id", "match_status", "matchday", "season_current_matchday", "hometeam_id" AS "team_id", "hometeam_tla" AS "team_tla", 'HOME_TEAM' AS "home_away", "score_fulltime_home" AS "score_fulltime", "score_halftime_home" AS "score_halftime", "score_winner" FROM "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_matches__2049823413" AS "int_ucl_matches" WHERE 1 = 1 AND "stage" = 'LEAGUE_STAGE'), "awayteam" AS (SELECT "match_id", "match_status", "matchday", "season_current_matchday", "awayteam_id" AS "team_id", "awayteam_tla" AS "team_tla", 'AWAY_TEAM' AS "home_away", "score_fulltime_away" AS "score_fulltime", "score_halftime_away" AS "score_halftime", "score_winner" FROM "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_matches__2049823413" AS "int_ucl_matches" WHERE 1 = 1 AND "stage" = 'LEAGUE_STAGE'), "unioned_data" AS (SELECT * FROM "hometeam" AS "hometeam" UNION ALL SELECT * FROM "awayteam" AS "awayteam"), "points" AS (SELECT "ud"."match_id", "ud"."matchday", "ud"."team_id", "ud"."team_tla", "t"."team_name" AS "team_name", "ud"."home_away", "ud"."score_fulltime", "ud"."score_winner", "ud"."match_status", SUM(CAST("ud"."score_halftime" AS INT)) OVER (PARTITION BY "ud"."team_id" ORDER BY "ud"."matchday" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "halftime_goals_scored", SUM(CAST("ud"."score_fulltime" AS INT)) OVER (PARTITION BY "ud"."team_id" ORDER BY "ud"."matchday" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "total_goals_scored", CASE WHEN "ud"."score_winner" = "ud"."home_away" THEN 3 WHEN "ud"."score_winner" = 'DRAW' THEN 1 ELSE 0 END AS "points_earned" FROM "unioned_data" AS "ud" LEFT JOIN "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_teams__1292453979" AS "t" ON "ud"."team_id" = "t"."team_id" WHERE 1 = 1), "goals_conceded" AS (SELECT "p".*, SUM(CAST("p"."points_earned" AS INT)) OVER (PARTITION BY "p"."team_id" ORDER BY "p"."matchday" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "total_points_earned", "pp"."score_fulltime" AS "goals_conceded", SUM(CAST("pp"."score_fulltime" AS INT)) OVER (PARTITION BY "p"."team_id" ORDER BY "p"."matchday" ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "total_goals_conceded" FROM "points" AS "p" JOIN "points" AS "pp" ON "p"."match_id" = "pp"."match_id" AND "p"."team_id" <> "pp"."team_id"), "matches" AS (SELECT "matchday", "match_status", "team_tla", "team_name", "total_points_earned", "total_goals_scored", "total_goals_conceded", ("total_goals_scored" - "total_goals_conceded") AS "goal_differential", MAX("matchday") OVER (ORDER BY "matchday" DESC) AS "max_matchday" FROM "goals_conceded" AS "goals_conceded" WHERE 1 = 1 AND "match_status" = 'FINISHED') SELECT CAST("matchday" AS DOUBLE) AS "matchday", CAST("match_status" AS TEXT) AS "match_status", CAST("team_tla" AS TEXT) AS "team_tla", CAST("team_name" AS TEXT) AS "team_name", CAST("total_points_earned" AS INT128) AS "total_points_earned", CAST("total_goals_scored" AS INT128) AS "total_goals_scored", CAST("total_goals_conceded" AS INT128) AS "total_goals_conceded", CAST("goal_differential" AS INT128) AS "goal_differential", CAST("max_matchday" AS DOUBLE) AS "max_matchday", CAST("current_matchday" AS INT) AS "current_matchday" FROM (SELECT *, CASE WHEN "max_matchday" = "matchday" THEN 1 ELSE 0 END AS "current_matchday" FROM "matches" AS "matches" ORDER BY 1, 5 DESC, 8 DESC, 6 DESC, 4) AS "_subquery" (base.py:2498)
2025-09-26 08:00:14,194 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."facts"."fct_ucl_league_standings": 1114700219> (facade.py:623)
2025-09-26 08:00:14,194 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."facts"."fct_ucl_league_standings": 1114700219> (interval.py:214)
2025-09-26 08:00:14,556 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Evaluating snapshot SnapshotId<"champions_league_data"."snapshots"."ucl_matches_snapshot": 968411897> (evaluator.py:700)
2025-09-26 08:00:14,557 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting data for snapshot SnapshotId<"champions_league_data"."snapshots"."ucl_matches_snapshot": 968411897> (evaluator.py:909)
2025-09-26 08:00:14,568 - MainThread - sqlmesh.core.snapshot.evaluator - INFO - Inserting batch (2025-09-25 00:00:00, 2025-09-26 00:00:00) into champions_league_data.sqlmesh__snapshots.snapshots__ucl_matches_snapshot__2584317657' (evaluator.py:939)
2025-09-26 08:00:14,569 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DESCRIBE "champions_league_data"."sqlmesh__snapshots"."snapshots__ucl_matches_snapshot__2584317657" (base.py:2498)
2025-09-26 08:00:14,582 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT CURRENT_CATALOG() (base.py:2498)
2025-09-26 08:00:14,583 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: SELECT type FROM DUCKDB_DATABASES() WHERE database_name = 'champions_league_data' (base.py:2498)
2025-09-26 08:00:14,592 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: CREATE TABLE "champions_league_data"."sqlmesh__snapshots"."__temp_snapshots__ucl_matches_snapshot__2584317657_biodu96g" AS SELECT CAST("snapshot_date" AS DATE) AS "snapshot_date", CAST("competition_id" AS BIGINT) AS "competition_id", CAST("competition_name" AS TEXT) AS "competition_name", CAST("competition_code" AS TEXT) AS "competition_code", CAST("season_id" AS BIGINT) AS "season_id", CAST("season_start_date" AS TEXT) AS "season_start_date", CAST("season_end_date" AS TEXT) AS "season_end_date", CAST("season_current_matchday" AS BIGINT) AS "season_current_matchday", CAST("match_id" AS BIGINT) AS "match_id", CAST("match_datetime_est" AS TIMESTAMP) AS "match_datetime_est", CAST("match_status" AS TEXT) AS "match_status", CAST("matchday" AS DOUBLE) AS "matchday", CAST("stage" AS TEXT) AS "stage", CAST("group" AS INT) AS "group", CAST("hometeam_id" AS DOUBLE) AS "hometeam_id", CAST("hometeam_name" AS TEXT) AS "hometeam_name", CAST("hometeam_shortname" AS TEXT) AS "hometeam_shortname", CAST("hometeam_tla" AS TEXT) AS "hometeam_tla", CAST("awayteam_id" AS DOUBLE) AS "awayteam_id", CAST("awayteam_name" AS TEXT) AS "awayteam_name", CAST("awayteam_shortname" AS TEXT) AS "awayteam_shortname", CAST("awayteam_tla" AS TEXT) AS "awayteam_tla", CAST("score_winner" AS TEXT) AS "score_winner", CAST("score_duration" AS TEXT) AS "score_duration", CAST("score_fulltime_home" AS DOUBLE) AS "score_fulltime_home", CAST("score_fulltime_away" AS DOUBLE) AS "score_fulltime_away", CAST("score_halftime_home" AS DOUBLE) AS "score_halftime_home", CAST("score_halftime_away" AS DOUBLE) AS "score_halftime_away", CAST("referees" AS STRUCT("id" INT, "name" TEXT, "type" TEXT, "nationality" TEXT)[]) AS "referees", CAST("hometeam_latitude" AS DOUBLE) AS "hometeam_latitude", CAST("hometeam_longitude" AS DOUBLE) AS "hometeam_longitude", CAST("awayteam_latitude" AS DOUBLE) AS "awayteam_latitude", CAST("awayteam_longitude" AS DOUBLE) AS "awayteam_longitude", CAST("hometeam_european_rank" AS BIGINT) AS "hometeam_european_rank", CAST("awayteam_european_rank" AS BIGINT) AS "awayteam_european_rank", CAST("hometeam_ucl_rank" AS BIGINT) AS "hometeam_ucl_rank", CAST("awayteam_ucl_rank" AS BIGINT) AS "awayteam_ucl_rank", CAST("distance_in_miles" AS DOUBLE) AS "distance_in_miles", CAST("week_ending_date" AS DATE) AS "week_ending_date" FROM (SELECT CURRENT_DATE AS "snapshot_date", "competition_id" AS "competition_id", "competition_name" AS "competition_name", "competition_code" AS "competition_code", "season_id" AS "season_id", "season_start_date" AS "season_start_date", "season_end_date" AS "season_end_date", "season_current_matchday" AS "season_current_matchday", "match_id" AS "match_id", "match_datetime_est" AS "match_datetime_est", "match_status" AS "match_status", "matchday" AS "matchday", "stage" AS "stage", "group" AS "group", "hometeam_id" AS "hometeam_id", "hometeam_name" AS "hometeam_name", "hometeam_shortname" AS "hometeam_shortname", "hometeam_tla" AS "hometeam_tla", "awayteam_id" AS "awayteam_id", "awayteam_name" AS "awayteam_name", "awayteam_shortname" AS "awayteam_shortname", "awayteam_tla" AS "awayteam_tla", "score_winner" AS "score_winner", "score_duration" AS "score_duration", "score_fulltime_home" AS "score_fulltime_home", "score_fulltime_away" AS "score_fulltime_away", "score_halftime_home" AS "score_halftime_home", "score_halftime_away" AS "score_halftime_away", "referees" AS "referees", "hometeam_latitude" AS "hometeam_latitude", "hometeam_longitude" AS "hometeam_longitude", "awayteam_latitude" AS "awayteam_latitude", "awayteam_longitude" AS "awayteam_longitude", "hometeam_european_rank" AS "hometeam_european_rank", "awayteam_european_rank" AS "awayteam_european_rank", "hometeam_ucl_rank" AS "hometeam_ucl_rank", "awayteam_ucl_rank" AS "awayteam_ucl_rank", "distance_in_miles" AS "distance_in_miles", "week_ending_date" AS "week_ending_date" FROM "champions_league_data"."sqlmesh__intermediate"."intermediate__int_ucl_matches__2049823413" AS "int_ucl_matches" WHERE 1 = 1 AND "match_status" = 'FINISHED' AND "match_datetime_est" < CURRENT_DATE) AS "_subquery" (base.py:2498)
2025-09-26 08:00:14,718 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DELETE FROM "champions_league_data"."sqlmesh__snapshots"."snapshots__ucl_matches_snapshot__2584317657" WHERE "match_id" IN (SELECT "match_id" FROM "champions_league_data"."sqlmesh__snapshots"."__temp_snapshots__ucl_matches_snapshot__2584317657_biodu96g") (base.py:2498)
2025-09-26 08:00:14,913 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: INSERT INTO "champions_league_data"."sqlmesh__snapshots"."snapshots__ucl_matches_snapshot__2584317657" ("snapshot_date", "competition_id", "competition_name", "competition_code", "season_id", "season_start_date", "season_end_date", "season_current_matchday", "match_id", "match_datetime_est", "match_status", "matchday", "stage", "group", "hometeam_id", "hometeam_name", "hometeam_shortname", "hometeam_tla", "awayteam_id", "awayteam_name", "awayteam_shortname", "awayteam_tla", "score_winner", "score_duration", "score_fulltime_home", "score_fulltime_away", "score_halftime_home", "score_halftime_away", "referees", "hometeam_latitude", "hometeam_longitude", "awayteam_latitude", "awayteam_longitude", "hometeam_european_rank", "awayteam_european_rank", "hometeam_ucl_rank", "awayteam_ucl_rank", "distance_in_miles", "week_ending_date") SELECT DISTINCT ON ("match_id") "snapshot_date", "competition_id", "competition_name", "competition_code", "season_id", "season_start_date", "season_end_date", "season_current_matchday", "match_id", "match_datetime_est", "match_status", "matchday", "stage", "group", "hometeam_id", "hometeam_name", "hometeam_shortname", "hometeam_tla", "awayteam_id", "awayteam_name", "awayteam_shortname", "awayteam_tla", "score_winner", "score_duration", "score_fulltime_home", "score_fulltime_away", "score_halftime_home", "score_halftime_away", "referees", "hometeam_latitude", "hometeam_longitude", "awayteam_latitude", "awayteam_longitude", "hometeam_european_rank", "awayteam_european_rank", "hometeam_ucl_rank", "awayteam_ucl_rank", "distance_in_miles", "week_ending_date" FROM "champions_league_data"."sqlmesh__snapshots"."__temp_snapshots__ucl_matches_snapshot__2584317657_biodu96g" (base.py:2498)
2025-09-26 08:00:14,992 - MainThread - sqlmesh.core.engine_adapter.base - INFO - Executing SQL: DROP TABLE IF EXISTS "champions_league_data"."sqlmesh__snapshots"."__temp_snapshots__ucl_matches_snapshot__2584317657_biodu96g" (base.py:2498)
2025-09-26 08:00:15,105 - MainThread - sqlmesh.core.state_sync.db.facade - INFO - Adding interval (2025-09-25 00:00:00, 2025-09-26 00:00:00) for snapshot SnapshotId<"champions_league_data"."snapshots"."ucl_matches_snapshot": 968411897> (facade.py:623)
2025-09-26 08:00:15,105 - MainThread - sqlmesh.core.state_sync.db.interval - INFO - Pushing intervals for snapshot SnapshotId<"champions_league_data"."snapshots"."ucl_matches_snapshot": 968411897> (interval.py:214)
2025-09-26 08:00:15,474 - MainThread - root - INFO - Shutting down the event dispatcher (dispatcher.py:159)
